services:
  frontend-cicarus:
    build:
      context: ./frontend-cicarus
      dockerfile: Dockerfile
    container_name: frontend-cicarus
    ports:
      - "80:80"        # Mapeia a porta 80 do container para 80 da m√°quina host
    depends_on:
      - customer-service  # Se quiser garantir que o backend esteja rodando antes
    networks:
      - cicarus-net

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=bWaC6KXWRsWTvYO6RfOvlw
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - cicarus-net

  mysql-auth:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: auth_db
    ports:
      - "3307:3306" # Auth DB on host port 3306
    volumes:
      - auth-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-account:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: account_db
    ports:
      - "3308:3306" # Account DB on host port 3307
    volumes:
      - account-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-transaction:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: transaction_db
    ports:
      - "3309:3306" # Transaction DB on host port 3308
    volumes:
      - transaction-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-notification: # From main branch
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: notification_db
    ports:
      - "3310:3306" # Notification DB on host port 3310
    volumes:
      - notification-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-customer: # From guilherme-Customer branch
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: customer_db
    ports:
      - "3311:3306"
    volumes:
      - customer-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-benefits:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: benefits_db
    ports:
        - "3316:3306"
    volumes:
        - benefits-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-loan:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: loan_db
    ports:
      - "3312:3306"  # Loan DB on host port 3312
    volumes:
      - loan-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-currency:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: exchange_db
    ports:
      - "3313:3306" # Notification DB on host port 3313
    volumes:
      - currency-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-card:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: card_db
    ports:
      - "3314:3306" # Notification DB on host port 3313
    volumes:
      - card-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-statement:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: statement_db
    ports:
      - "3315:3306" # Notification DB on host port 3313
    volumes:
      - statement-data:/var/lib/mysql
    networks:
      - cicarus-net

  mysql-investment:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: investment_db
    ports:
      - "3317:3306" # Notification DB on host port 3313
    volumes:
      - investment-data:/var/lib/mysql
    networks:
      - cicarus-net

  naming-server:
    build:
      context: ./naming-server # Path to the naming-server project folder
    ports:
      - "8761:8761" # Map host port 8761 to container port 8761
    networks:
      - cicarus-net

  api-gateway:
    build:
      context: ./api-gateway # Path to api-gateway project
    ports:
      - "443:8443"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - naming-server
    networks:
      - cicarus-net


  account:
    build:
      context: ./account
    ports:
      - "8200:8200"
    environment:
      # Override the datasource URL to point to the MySQL container's service name
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-account:3306/account_db
      # You also need to do this for Eureka!
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-account
      - naming-server
    networks:
      - cicarus-net

  auth:
    build:
      context: ./auth
    ports:
      - "8000:8000"
    environment:
      # Override the datasource URL to point to the MySQL container's service name
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-auth:3306/auth_db
      # You also need to do this for Eureka!
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-auth
      - naming-server
    networks:
      - cicarus-net

  customer-service:
    build:
      context: ./customer-service
    ports:
      - "8300:8300"
    environment:
      # Override the datasource URL to point to the MySQL container's service name
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-customer:3306/customer_db
      # You also need to do this for Eureka!
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-customer
      - naming-server
    networks:
      - cicarus-net

  benefits-service:
    build:
      context: ./benefits-service
    ports:
      - "8800:8800"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-benefits:3306/benefits_db
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-benefits
      - naming-server
    networks:
      - cicarus-net

  loan-service:
    build:
      context: ./loan-service
    ports:
      - "8400:8400"
    environment:
      # Override the datasource URL to point to the MySQL container's service name
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-loan:3306/loan_db
      # You also need to do this for Eureka!
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-loan
      - naming-server
    networks:
      - cicarus-net

  notification:
    build:
      context: ./notification
    ports:
      - "8082:8082"
    environment:
      # Override the datasource URL to point to the MySQL container's service name
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-notification:3306/notification_db
      # You also need to do this for Eureka!
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-notification
      - naming-server
    networks:
      - cicarus-net

  transaction:
    build:
      context: ./transaction
    ports:
      - "8100:8100"
    environment:
      # Override the datasource URL to point to the MySQL container's service name
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-transaction:3306/transaction_db
      # You also need to do this for Eureka!
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-transaction
      - naming-server
    networks:
      - cicarus-net

  currency-exchange:
    build:
      context: ./currency-exchange
    ports:
      - "8500:8500"
    environment:
      # Override the datasource URL to point to the MySQL container's service name
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-currency:3306/exchange_db
      # You also need to do this for Eureka!
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-currency
      - naming-server
    networks:
      - cicarus-net

  card:
    build:
      context: ./card
    ports:
      - "8600:8600"
    environment:
      # Override the datasource URL to point to the MySQL container's service name
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-card:3306/card_db
      # You also need to do this for Eureka!
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-card
      - naming-server
    networks:
      - cicarus-net

  statement-service:
    build:
      context: ./statement-service
    ports:
      - "8700:8700"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-statement:3306/statement_db
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-statement
      - naming-server
    networks:
      - cicarus-net

  investment:
    build:
      context: ./investment
    ports:
      - "8900:8900"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-investment:3306/investment_db
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      - mysql-investment
      - naming-server
    networks:
      - cicarus-net

volumes:
  auth-data:
  account-data:
  transaction-data:
  loan-data:
  customer-data: # Added from guilherme-Customer branch
  currency-data:
  notification-data: # Added from main branch
  kafka_data:
  card-data:
  statement-data:
  investment-data:
  benefits-data:
networks:
  cicarus-net:
    driver: bridge
