--importar--

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.8.9</version>
		</dependency>


--com.cicarus.config (trocar o nome do microservice de acordo)--

@OpenAPIDefinition(info = @Info(title = "Transaction Microservice", version = "v1", description = "Documentation of Transaction Microservice"))
public class OpenApiConfiguration {
    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .components(new Components())
                .info(new io.swagger.v3.oas.models.info.Info()
                        .title("Transaction Microservice")
                        .version("1.0"));
    }
}


--com.cicarus.config (trocar o nome do microservice de acordo)--

@Configuration
public class WebConfig implements WebMvcConfigurer {

    public void addCorsMappings(CorsRegistry registry) {
        registry.addMapping("/**")
                    .allowedOriginPatterns("*")
                    .allowedMethods("GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS")
                    .allowCredentials(true)
                    .maxAge(3600);
    }
}

--no controller de cada micro--

	@Tag(name = "Transaction Endpoint")
	@RestController
	@RequestMapping("transaction")
	public class TransactionController {
		@Operation(summary = "Get all transactions")
    		@GetMapping
    		public List<Transaction> getAllTransactions() {
        		return transactionRepository.findAll();
    		}
	}

-- no application.yml --

springdoc:
  api-docs:
    path: /transaction/v3/api-docs
  swagger-ui:
    url: /transaction/v3/api-docs



-- no application.yml do api-gateway --

springdoc:
  swagger-ui:
    urls:
      - name: transaction
        url: /transaction/v3/api-docs
      - name: seu-micro
        url: /seu-micro/v3/api-docs
  override-server-url: true

